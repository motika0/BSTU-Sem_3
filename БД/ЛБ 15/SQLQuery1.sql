--1
USE test;
GO

SELECT 
    ОборудованиеID AS "Оборудование/ID",
    Название AS "Оборудование/Название",
    Тип AS "Оборудование/Тип",
    Дата_прибытия AS "Оборудование/Дата_прибытия",
    Количество AS "Оборудование/Количество",
    ПодразделениеID AS "Оборудование/ПодразделениеID"
FROM ОБОРУДОВАНИЕ
WHERE Тип = 'Электроника'
FOR XML PATH('Оборудование'), ROOT('Список_оборудования');
--2
USE test;
GO

SELECT 
    ОБОРУДОВАНИЕ.Название AS "Название_оборудования",
    ОБОРУДОВАНИЕ.Тип AS "Тип_оборудования",
    ОБОРУДОВАНИЕ.Количество AS "Количество"
FROM ОБОРУДОВАНИЕ
JOIN ПОДРАЗДЕЛЕНИЯ ON ОБОРУДОВАНИЕ.ПодразделениеID = ПОДРАЗДЕЛЕНИЯ.ПодразделениеID
WHERE ОБОРУДОВАНИЕ.Тип = 'Электроника'
FOR XML AUTO, ROOT('Список_оборудования'), ELEMENTS;
--3
USE test;
GO
CREATE TABLE [dbo].[ОБОРУДОВАНИ](
    [ОборудованиеID] [int] NOT NULL,
    [Название] [nvarchar](100) NULL,
    [Тип] [nvarchar](50) NOT NULL,
    [Дата_прибытия] [date] NOT NULL,
    [Количество] [int] NOT NULL,
    [ПодразделениеID] [int] NOT NULL
);

DECLARE @h INT,
        @x NVARCHAR(2000) = '<?xml version="1.0" encoding="windows-1251" ?>
<оборудование>
    <элемент название="Проектор" тип="Электроника" дата_прибытия="2024-12-15" количество="5" подразделениеID="1" />
    <элемент название="Микрофон" тип="Электроника" дата_прибытия="2024-12-16" количество="10" подразделениеID="1" />
    <элемент название="Кресло" тип="Мебель" дата_прибытия="2024-12-17" количество="20" подразделениеID="2" />
</оборудование>';


USE UNIVER;
GO

DECLARE @h INT,
        @x xml = '<?xml version="1.0" encoding="windows-1251" ?>
<оборудование>
    <элемент название="Проектор" тип="Электроника" дата_прибытия="2024-12-15" количество="5" подразделениеID="1" />
    <элемент название="Микрофон" тип="Электроника" дата_прибытия="2024-12-16" количество="10" подразделениеID="1" />
    <элемент название="Кресло" тип="Мебель" дата_прибытия="2024-12-17" количество="20" подразделениеID="2" />
</оборудование>';

-- Подготовка XML-документа
EXEC sp_xml_preparedocument @h OUTPUT, @x;

-- Извлечение данных из XML-документа и добавление их в таблицу ОБОРУДОВАНИЕ
INSERT INTO ОБОРУДОВАНИЕ (Название, Тип, Дата_прибытия, Количество, ПодразделениеID)
SELECT Название, Тип, Дата_прибытия, Количество, ПодразделениеID
FROM OPENXML(@h, '/оборудование/элемент', 0)
WITH (
    Название NVARCHAR(100) 'название',
    Тип NVARCHAR(50) 'тип',
    Дата_прибытия DATE 'дата_прибытия',
    Количество INT 'количество',
    ПодразделениеID INT 'подразделениеID'
);

-- Проверка содержимого таблицы ОБОРУДОВАНИЕ
SELECT * FROM ОБОРУДОВАНИЕ;

-- Удаление XML-документа
EXEC sp_xml_removedocument @h;
--4
CREATE TABLE [dbo].[ОБОРУДОВАНИЕ](
    [ОборудованиеID] [int] NOT NULL PRIMARY KEY,
    [Название] [nvarchar](100) NULL,
    [Тип] [nvarchar](50) NOT NULL,
    [Дата_прибытия] [date] NOT NULL,
    [Количество] [int] NOT NULL,
    [ПодразделениеID] [int] NOT NULL,
    [Info] [xml] NULL -- столбец XML-типа для паспортных данных
);
DECLARE @h INT,
        @x NVARCHAR(2000) = '<?xml version="1.0" encoding="windows-1251" ?>
<паспортные_данные>
    <оборудование>
        <серия>AB</серия>
        <номер>1234567</номер>
        <личный_номер>1234567890</личный_номер>
        <дата_выдачи>2024-01-01</дата_выдачи>
        <адрес_прописки>Минск, ул. Ленина, д. 10</адрес_прописки>
    </оборудование>
</паспортные_данные>';
USE UNIVER;
GO

-- Вставка данных в таблицу ОБОРУДОВАНИЕ
INSERT INTO ОБОРУДОВАНИЕ (ОборудованиеID, Название, Тип, Дата_прибытия, Количество, ПодразделениеID, Info)
VALUES (1, 'Компьютер', 'Электроника', '2024-12-10', 10, 1, 
'<паспортные_данные>
    <оборудование>
        <серия>AB</серия>
        <номер>1234567</номер>
        <личный_номер>1234567890</личный_номер>
        <дата_выдачи>2024-01-01</дата_выдачи>
        <адрес_прописки>Минск, ул. Ленина, д. 10</адрес_прописки>
    </оборудование>
</паспортные_данные>');

-- Обновление данных в таблице ОБОРУДОВАНИЕ
UPDATE ОБОРУДОВАНИЕ
SET Info = '<паспортные_данные>
    <оборудование>
        <серия>CD</серия>
        <номер>7654321</номер>
        <личный_номер>0987654321</личный_номер>
        <дата_выдачи>2024-02-01</дата_выдачи>
        <адрес_прописки>Минск, ул. Советская, д. 20</адрес_прописки>
    </оборудование>
</паспортные_данные>'
WHERE ОборудованиеID = 1;

-- Выборка данных из таблицы ОБОРУДОВАНИЕ
SELECT 
    ОборудованиеID,
    Название,
    Info.value('(/паспортные_данные/оборудование/серия)[1]', 'NVARCHAR(10)') AS Серия,
    Info.value('(/паспортные_данные/оборудование/номер)[1]', 'NVARCHAR(10)') AS Номер,
    Info.value('(/паспортные_данные/оборудование/личный_номер)[1]', 'NVARCHAR(20)') AS Личный_номер,
    Info.value('(/паспортные_данные/оборудование/дата_выдачи)[1]', 'DATE') AS Дата_выдачи,
    Info.query('/паспортные_данные/оборудование/адрес_прописки') AS Адрес_прописки
FROM ОБОРУДОВАНИЕ;
--5
USE UNIVER;
GO

CREATE XML SCHEMA COLLECTION EquipmentSchema AS 
N'<?xml version="1.0" encoding="utf-16" ?>
<xs:schema attributeFormDefault="unqualified" 
           elementFormDefault="qualified"
           xmlns:xs="http://www.w3.org/2001/XMLSchema">
       <xs:element name="оборудование">  
       <xs:complexType><xs:sequence>
       <xs:element name="паспорт" maxOccurs="1" minOccurs="1">
       <xs:complexType>
       <xs:attribute name="серия" type="xs:string" use="required" />
       <xs:attribute name="номер" type="xs:unsignedInt" use="required"/>
       <xs:attribute name="дата"  use="required" >  
       <xs:simpleType>  <xs:restriction base ="xs:string">
   <xs:pattern value="[0-9]{2}.[0-9]{2}.[0-9]{4}"/>
   </xs:restriction>    </xs:simpleType>
   </xs:attribute> </xs:complexType> 
   </xs:element>
   <xs:element maxOccurs="3" name="телефон" type="xs:unsignedInt"/>
   <xs:element name="адрес">   <xs:complexType><xs:sequence>
   <xs:element name="страна" type="xs:string" />
   <xs:element name="город" type="xs:string" />
   <xs:element name="улица" type="xs:string" />
   <xs:element name="дом" type="xs:string" />
   <xs:element name="квартира" type="xs:string" />
   </xs:sequence></xs:complexType>  </xs:element>
   </xs:sequence></xs:complexType>
   </xs:element>
</xs:schema>';
ALTER TABLE ОБОРУДОВАНИЕ
ADD INFO xml(EquipmentSchema); -- типизированный столбец XML-типа
-- Вставка данных с ошибками
INSERT INTO ОБОРУДОВАНИЕ (ОборудованиеID, Название, Тип, Дата_прибытия, Количество, ПодразделениеID, INFO)
VALUES (1, 'Компьютер', 'Электроника', '2024-12-10', 10, 1, 
'<оборудование>
    <паспорт серия="AB" номер="1234567" дата="01.01.2024" />
    <телефон>1234567890</телефон>
    <адрес>
        <страна>Беларусь</страна>
        <город>Минск</город>
        <улица>Ленина</улица>
        <дом>10</дом>
        <квартира>1</квартира>
    </адрес>
</оборудование>');

-- Вставка данных без ошибок
INSERT INTO ОБОРУДОВАНИЕ (ОборудованиеID, Название, Тип, Дата_прибытия, Количество, ПодразделениеID, INFO)
VALUES (2, 'Принтер', 'Электроника', '2024-12-11', 5, 1, 
'<оборудование>
    <паспорт серия="CD" номер="7654321" дата="02.01.2024" />
    <телефон>9876543210</телефон>
    <адрес>
        <страна>Беларусь</страна>
        <город>Минск</город>
        <улица>Советская</улица>
        <дом>20</дом>
        <квартира>2</квартира>
    </адрес>
</оборудование>');

-- Обновление данных с ошибками
UPDATE ОБОРУДОВАНИЕ
SET INFO = '<оборудование>
    <паспорт серия="EF" номер="1234567" дата="03.01.2024" />
    <телефон>1234567890</телефон>
    <адрес>
        <страна>Беларусь</страна>
        <город>Минск</город>
        <улица>Ленина</улица>
        <дом>10</дом>
        <квартира>1</квартира>
    </адрес>
</оборудование>'
WHERE ОборудованиеID = 1;

-- Обновление данных без ошибок
UPDATE ОБОРУДОВАНИЕ
SET INFO = '<оборудование>
    <паспорт серия="GH" номер="7654321" дата="04.01.2024" />
    <телефон>9876543210</телефон>
    <адрес>
        <страна>Беларусь</страна>
        <город>Минск</город>
        <улица>Советская</улица>
        <дом>20</дом>
        <квартира>2</квартира>
    </адрес>
</оборудование>'
WHERE ОборудованиеID = 2;

-- Выборка данных с использованием методов QUERY и VALUE
SELECT 
    ОборудованиеID,
    Название,
    INFO.value('(/оборудование/паспорт/@серия)[1]', 'NVARCHAR(10)') AS Серия,
    INFO.value('(/оборудование/паспорт/@номер)[1]', 'NVARCHAR(10)') AS Номер,
    INFO.value('(/оборудование/паспорт/@личный_номер)[1]', 'NVARCHAR(20)') AS Личный_номер,
    INFO.value('(/оборудование/паспорт/@дата)[1]', 'DATE') AS Дата_выдачи,
    INFO.query('/оборудование/адрес') AS Адрес_прописки
FROM ОБОРУДОВАНИЕ;
CREATE XML SCHEMA COLLECTION AnotherSchema AS 
N'<?xml version="1.0" encoding="utf-16" ?>
<xs:schema attributeFormDefault="unqualified" 
           elementFormDefault="qualified"
           xmlns:xs="http://www.w3.org/2001/XMLSchema">
       <xs:element name="оборудование">  
       <xs:complexType><xs:sequence>
       <xs:element name="серийный_номер" type="xs:string" />
       <xs:element name="модель" type="xs:string" />
       <xs:element name="дата_производства" type="xs:date" />
       </xs:sequence></xs:complexType>
       </xs:element>
</xs:schema>';

